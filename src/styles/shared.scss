@font-face {
  font-family: "Snatcher SegaCD";
  src: local("Snatcher SegaCD"),
    url(../../public/fonts/snatcher-sega-cd.otf) format("opentype");
}

@font-face {
  font-family: "Compacta";
  src: local("Compacta"),
    url(../../public/fonts/CompactaStdItalic.otf) format("opentype");
}

@font-face {
  font-family: "Pixter Display Bold";
  src: local("Pixter Display Bold"),
    url(../../public/fonts/PixterDisplayBold.ttf) format("truetype");
}

// Font Families
$snatcherText: "Snatcher SegaCD";
$snatcherTitle: "Compacta";
$snatcherIntro: "Pixter Display Bold";

// Colors
$snatcherFont: #2ad0cd;

a {
  cursor: pointer;
}

/* mobile styling */
$breakpoints: (
  "small": 767px,
  "medium": 992px,
  "large": 1200px,
) !default;

/// Mixin to manage responsive breakpoints
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Firefox < 16 */
@-moz-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Safari, Chrome and Opera > 12.1 */
@-webkit-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Internet Explorer */
@-ms-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Opera < 12.1 */
@-o-keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Fade-Out Effect */
.hidden {
  visibility: hidden;
  opacity: 0;
  transition: visibility 0s 2s, opacity 2s linear;
}
